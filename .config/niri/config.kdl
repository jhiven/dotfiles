input {
    keyboard {
        xkb {
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    touchpad {
        // off
        tap
        dwt
        // dwtp
        natural-scroll
        accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        accel-speed -0.1
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // middle-emulation
    }

    // NOTE: make the mouse warp to the center of newly focused windows.
    //
    // warp-mouse-to-focus

    // NOTE: Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="0%"
}

hotkey-overlay {
    skip-at-startup
}

// NOTE: run `niri msg outputs` to see all outputs
output "eDP-1" {
    // off

    // NOTE: Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@60.049"
    scale 1
    transform "normal"
    // position x=1280 y=0
}

layout {
    gaps 5

    // NOTE: When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"

    // NOTE: You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.5

        // fixed 1920
    }

    // NOTE: You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    preset-window-heights { 
        proportion 0.5
        proportion 1.0
    }

    // NOTE: You can change the default width of the new windows.
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    default-column-width { }

    focus-ring {
        // off

        width 1

        // NOTE: Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.
        active-color "#74c7ec"

        inactive-color "#585b70"

        // active-gradient from="#80c8ff" to="#bbddff" angle=45

        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    border {
        off

        width 4
        active-color "#ffc87f"
        inactive-color "#505050"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

// spawn-at-startup "alacritty" "-e" "fish"
spawn-at-startup "xwayland-satellite"

// NOTE: By default focus ring and border are rendered as a solid background rectangle
// behind windows. That is, they will show up through semitransparent windows.
// This is because windows using client-side decorations can have an arbitrary shape.
prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

// NOTE: You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

environment {
    DISPLAY ":0"
}

animations {
    // off

    slowdown 0.5
}



// NOTE: by setting an empty default-column-width.
window-rule {
    // NOTE: This regular expression is intentionally made as specific as possible,
    // since this is the default config, and we want no false positives.
    // You can get away with just app-id="wezterm" if you want.
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

// NOTE: Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // NOTE: This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

window-rule {
    match app-id=r#"firefox$"# title="^Extension$"
    open-floating true
}


// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    geometry-corner-radius 6
    clip-to-geometry true
}

binds {
    // NOTE: Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // NOTE: Mod-Shift-/, which is usually the same as Mod-?, shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+Q { spawn "ghostty"; }
    Mod+E { spawn "nautilus"; }
    // Mod+D { spawn "fuzzel"; }
    // Super+Alt+L { spawn "swaylock"; }

    // NOTE: You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+W { close-window; }

    Mod+H           { focus-column-left; }
    Mod+L           { focus-column-right; }
    Mod+J           { focus-window-or-workspace-down; }
    Mod+K           { focus-window-or-workspace-up; }
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+L     { move-column-right; }
    Mod+Shift+J     { move-window-down-or-to-workspace-down; }
    Mod+Shift+K     { move-window-up-or-to-workspace-up; }

    Alt+Tab { focus-workspace-previous; }

    Mod+C { center-column; }

    Mod+Shift+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+Shift+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown       cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp         cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollDown      { focus-column-right; }
    Mod+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    Mod+R       { switch-preset-column-width; }
    Mod+F       { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    Mod+Ctrl+H { set-column-width "-10%"; }
    Mod+Ctrl+L { set-column-width "+10%"; }

    Mod+Ctrl+K { set-window-height "-10%"; }
    Mod+Ctrl+J { set-window-height "+10%"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    Mod+Shift+S { screenshot; }
    Mod+Print  { screenshot-screen; }
    Mod+Shift+Print   { screenshot-window; }

    Mod+Shift+E { quit; }

    Mod+Shift+P { power-off-monitors; }
}
